#!/bin/bash
#这是一个重启kibana服务的脚本，运行方式，bash service.sh {start|stop|restart|status|reload}

start() {
  # 启动Kibana
  /home/{{ admin_user }}/server/kibana/bin/kibana >/dev/null 2>&1 &
  sleep 10
  # 修改备份数量,如果这行执行失败，是由于es服务没ready，需要手工执行
#  curl -XPUT -H 'Content-Type: application/json' "http://{{ groups['elasticsearchClient'][0] }}:{{ elasticsearch_client_restful_port }}/_all/_settings" -d '{"index.number_of_replicas" : "0"}'
  bash /home/{{ admin_user }}/server/kibana/bin/admin_kibana_dog.sh stop
  bash /home/{{ admin_user }}/server/kibana/bin/admin_kibana_dog.sh start
  echo "服务已经启动完成"
}


dog_start() {
    /home/{{ admin_user }}/server/kibana/bin/kibana >/dev/null 2>&1 &
#   curl -XPUT -H 'Content-Type: application/json' "http://{{ groups['elasticsearchClient'][0] }}:{{ elasticsearch_client_restful_port }}/_all/_settings" -d '{"index.number_of_replicas" : "0"}'

}

stop() {
    kill_server
}

restart() {
    stop
    sleep 6
    start
}

status() {
    echo "status"
}

reload() {
    echo "reload"
}

kill_server() {
    sync
    bash /home/{{ admin_user }}/server/kibana/bin/admin_kibana_dog.sh stop
    echo "狗杀死!"
    for i in `ps aux | grep "/node/bin/node"| grep -v 'grep'|grep -v "service.sh"| awk '{print $2}'`
    do
        kill -9 ${i}
    done
    sleep 3
    echo "服务停止成功！"
}

case "$1" in
    start)
        start
        ;;
    dog_start)
        dog_start
        ;;
    stop)
        stop
        ;;
    reload)
        reload
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: { start | stop | reload | restart | status | test |dog_start }"
        exit 1
esac
